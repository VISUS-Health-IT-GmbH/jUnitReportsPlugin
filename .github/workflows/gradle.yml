# Gradle CI for building / testing / packaging the plugin
name: Gradle CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-and-test:
    name: Build and test Gradle Plugin
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0
      
      # 1) setup Java
      - name: Set up Java 11
        uses: actions/setup-java@v2.3.1
        with:
          java-version: '11'
          distribution: 'adopt'
          architecture: x64
      
      # 2) grant execute permission
      - name: Grant permission
        run: chmod +x gradlew
      
      # 3) build JAR
      - name: Build - jar
        run: ./gradlew jar --refresh-dependencies

      # 4) build test classes
      - name: Build - testClasses
        run: ./gradlew testClasses
        
      # 5) test plugin
      - name: Test plugin
        run: ./gradlew test
      
      # 6) JaCoCo plugin
      - name: JaCoCo
        run: ./gradlew jacocoTestReport

      # 7) SonarCloud packages
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # 8) Gradle packages
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      # 9) SonarQube plugin
      - name: SonarQube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonarqube --info
      
      # 10) publish jUnit results
      - name: Test results
        uses: EnricoMi/publish-unit-test-result-action@v1.24
        if: always()
        with:
          files: build/test-results/test/*.xml
